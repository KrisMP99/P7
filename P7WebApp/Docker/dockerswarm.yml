version: "3.4"

services:
  p7webapp_api:
    image: p7webappapi
    environment:
      ASPNETCORE_ENVIRONMENT: production
    build:
      context: ../
      dockerfile: ./P7WebApp.API/Dockerfile
      target: production
    networks:
      - frontend
      - backend
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 3

  p7webapp_ui:
    image: p7webappui
    build:
      context: ../
      dockerfile: ./p7webapp.webui/Dockerfile
      target: production
    volumes:
      - type: bind
        source: ../p7webapp.webui
        target: /app
    ports:
      - "80:80"
      - "443:443"
    networks:
      - frontend
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
        max_attempts: 3
  
  postgres:
    image: postgres:14.5
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${TARGET_USER}
      - POSTGRES_PASSWORD=${TARGET_PASSWORD}
    ports:
      - 5431:5431
    volumes:
      - /var/lib/docker/volumes/postgres/_data:/var/lib/postgresql/data
    networks:
      - backend

networks:
  frontend:
  backend: